var utils=require("../utils/index");var EthersAbi=require("./utils/abi-coder").AbiCoder;const AbiCoder=require("../utils/helper/abi-coder/index");var ethersAbiCoder=new EthersAbi(function(e,t){if(e.match(/^u?int/)&&!(utils.judge(t)==="array")&&(!(utils.judge(t)==="object")||t.constructor.name!=="BN")){return t.toString()}return t});function Result(){}class ABICoder{encodeFunctionSignature(e){if(utils.judge(e)==="object"){e=utils._jsonInterfaceMethodToString(e)}return utils.sha3(e).slice(0,10)}encodeEventSignature(e){if(utils.judge(e)==="object"){e=utils._jsonInterfaceMethodToString(e)}return utils.sha3(e)}encodeParameter(e,t){return this.encodeParameters([e],[t])}encodeParameters(e,t){return ethersAbiCoder.encode(this.mapTypes(e),t)}mapTypes(e){var r=this;var n=[];e.forEach(function(e){if(r.isSimplifiedStructFormat(e)){var t=Object.keys(e)[0];n.push(Object.assign(r.mapStructNameAndType(t),{components:r.mapStructToCoderFormat(e[t])}));return}n.push(e)});return n}isSimplifiedStructFormat(e){return typeof e==="object"&&typeof e.components==="undefined"&&typeof e.name==="undefined"}mapStructNameAndType(e){var t="tuple";if(e.indexOf("[]")>-1){t="tuple[]";e=e.slice(0,-2)}return{type:t,name:e}}mapStructToCoderFormat(t){var r=this;var n=[];Object.keys(t).forEach(function(e){if(typeof t[e]==="object"){n.push(Object.assign(r.mapStructNameAndType(e),{components:r.mapStructToCoderFormat(t[e])}));return}n.push({name:e,type:t[e]})});return n}encodeFunctionCall(e,t){return this.encodeFunctionSignature(e)+this.encodeParameters(e.inputs,t).replace("0x","")}decodeParameter(e,t){return this.decodeParameters([e],t)[0]}decodeParameters(e,t){if(e.length>0&&(!t||t==="0x"||t==="0X")){throw new Error("Returned values aren't valid, did it run Out of Gas?")}const r=new AbiCoder;const o=r.decode(e,"0x"+t.replace(/0x/i,""));var u=new Result;u.__length__=0;e.forEach(function(t,r){if(utils.judge(t)==="object"&&t.type==="address"){u[t.name||r]=utils.encodeAccount(o[u.__length__].slice(2))}else if(utils.judge(t)==="object"&&t.type==="address[]"){var n=o[u.__length__];const i=[];for(let e=0;e<n.length;e++){i.push(utils.encodeAccount(n[e].slice(2)))}u[t.name||r]=i}else{let e=o[u.__length__];e=e==="0x"?null:e;u[r]=e;if(utils.judge(t)==="object"&&t.name){u[t.name]=e}}u.__length__++});return u}decodeLog(e,t,r){var n=this;r=utils.judge(r)==="array"?r:[r];t=t||"";var i=[];var o=[];var u=0;e.forEach(function(t,e){if(t.indexed){o[e]=["bool","int","uint","address","fixed","ufixed"].find(function(e){return t.type.indexOf(e)!==-1})?n.decodeParameter(t.type,r[u]):r[u];u++}else{i[e]=t}});var a=t;var s=a?this.decodeParameters(i,a):[];var d=new Result;d.__length__=0;e.forEach(function(e,t){d[t]=e.type==="string"?"":null;if(typeof s[t]!=="undefined"){d[t]=s[t]}if(typeof o[t]!=="undefined"){d[t]=o[t]}if(e.name){d[e.name]=d[t]}d.__length__++});return d}}module.exports=new ABICoder;