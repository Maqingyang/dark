"use strict";Object.defineProperty(exports,"__esModule",{value:true});var bytes_1=require("./bytes");function arrayifyInteger(e){var r=[];while(e){r.unshift(e&255);e>>=8}return r}function unarrayifyInteger(e,r,n){var t=0;for(var o=0;o<n;o++){t=t*256+e[r+o]}return t}function _encode(e){if(Array.isArray(e)){var r=[];e.forEach(function(e){r=r.concat(_encode(e))});if(r.length<=55){r.unshift(192+r.length);return r}const t=arrayifyInteger(r.length);t.unshift(247+t.length);return t.concat(r)}var n=Array.prototype.slice.call(bytes_1.arrayify(e));if(n.length===1&&n[0]<=127){return n}else if(n.length<=55){n.unshift(128+n.length);return n}const t=arrayifyInteger(n.length);t.unshift(183+t.length);return t.concat(n)}function encode(e){return bytes_1.hexlify(_encode(e))}exports.encode=encode;function _decodeChildren(e,r,n,t){var o=[];while(n<r+1+t){var i=_decode(e,n);o.push(i.result);n+=i.consumed;if(n>r+1+t){throw new Error("invalid rlp")}}return{consumed:1+t,result:o}}function _decode(e,r){if(e.length===0){throw new Error("invalid rlp data")}if(e[r]>=248){const n=e[r]-247;if(r+1+n>e.length){throw new Error("too short")}const t=unarrayifyInteger(e,r+1,n);if(r+1+n+t>e.length){throw new Error("to short")}return _decodeChildren(e,r,r+1+n,n+t)}else if(e[r]>=192){const t=e[r]-192;if(r+1+t>e.length){throw new Error("invalid rlp data")}return _decodeChildren(e,r,r+1,t)}else if(e[r]>=184){const n=e[r]-183;if(r+1+n>e.length){throw new Error("invalid rlp data")}const t=unarrayifyInteger(e,r+1,n);if(r+1+n+t>e.length){throw new Error("invalid rlp data")}const o=bytes_1.hexlify(e.slice(r+1+n,r+1+n+t));return{consumed:1+n+t,result:o}}else if(e[r]>=128){const t=e[r]-128;if(r+1+t>e.length){throw new Error("invlaid rlp data")}const o=bytes_1.hexlify(e.slice(r+1,r+1+t));return{consumed:1+t,result:o}}return{consumed:1,result:bytes_1.hexlify(e[r])}}function decode(e){var r=bytes_1.arrayify(e);var n=_decode(r,0);if(n.consumed!==r.length){throw new Error("invalid rlp data")}return n.result}exports.decode=decode;