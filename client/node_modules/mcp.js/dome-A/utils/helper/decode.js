const AbiCoder=require("./abi-coder/index");const bs58check=require("bs58check");function extractSize(t){const e=t.match(/([a-zA-Z0-9])(\[.*\])/);return e?e[2]:""}function makeFullTupleTypeDefinition(t){if(t&&t.type.indexOf("tuple")===0&&t.components){const e=t.components.map(t=>t.type);return`tuple(${e.join(",")})${extractSize(t.type)}`}return t.type}function parseToArray(t,n){if(n.outputs&&n.outputs.length>0){try{let e;const a=[];for(e=0;e<n.outputs.length;e++){const p=n.outputs[e].type;a.push(p.indexOf("tuple")===0?makeFullTupleTypeDefinition(n.outputs[e]):p)}if(!t.length){t=new Uint8Array(32*n.outputs.length)}const c=new AbiCoder;const s=c.decode(a,t);const i=[];for(e=0;e<a.length;e++){const u=n.outputs[e].name;if(a[e]==="address"){const o=Buffer.from(s[e].substr(2),"hex");const r=Buffer.from([1]);const l=Buffer.concat([r,o]);const y="mcp"+bs58check.encode(l);i.push({name:u||"",type:a[e],value:y})}else if(a[e]==="address[]"){const f=[];for(let t=0;t<s[e].length;t++){const o=Buffer.from(s[e][t].substr(2),"hex");const r=Buffer.from([1]);const l=Buffer.concat([r,o]);f.push("mcp"+bs58check.encode(l))}i.push({name:u||"",type:a[e],value:f})}else{i.push({name:u||"",type:a[e],value:s[e]})}}return i}catch(t){return{error:"Failed to decode output: "+t}}}return[]}function parseInputsToArray(e,n){if(n.inputs&&n.inputs.length>0){try{let t;const a=[];for(t=0;t<n.inputs.length;t++){const p=n.inputs[t].type;a.push(p.indexOf("tuple")===0?makeFullTupleTypeDefinition(n.inputs[t]):p)}if(!e.length){e=new Uint8Array(32*n.inputs.length)}const s=new AbiCoder;const i=s.decode(a,e);return i}catch(t){return{error:"Failed to decode input: "+t}}}return[]}const owner_abi={constant:true,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"};const name_abi={constant:true,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:false,stateMutability:"view",type:"function"};const symbol_abi={constant:true,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:false,stateMutability:"view",type:"function"};const decimals_abi={constant:true,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:false,stateMutability:"view",type:"function"};const balance_of_abi={constant:true,inputs:[{name:"",type:"address"}],name:"balanceOf",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"};const total_supply_abi={constant:true,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"};const allowance_abi={constant:true,inputs:[{name:"",type:"address"},{name:"",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"};const pageUtility={parse:(t,e)=>{t=t.indexOf("0x")===-1?"0x"+t:t;return parseToArray(t,e)},parseInputs:(t,e)=>parseInputsToArray(t,e),owner:t=>{return pageUtility.parse(t,owner_abi)},name:t=>{return pageUtility.parse(t,name_abi)},symbol:t=>{return pageUtility.parse(t,symbol_abi)},decimals:t=>{return pageUtility.parse(t,decimals_abi)},totalSupply:t=>{return pageUtility.parse(t,total_supply_abi)},balanceOf:t=>{return pageUtility.parse(t,balance_of_abi)},allowance:t=>{return pageUtility.parse(t,allowance_abi)}};module.exports={parse:pageUtility.parse,parseInputs:pageUtility.parseInputs,name:pageUtility.name,symbol:pageUtility.symbol,owner:pageUtility.owner,decimals:pageUtility.decimals,totalSupply:pageUtility.totalSupply,balanceOf:pageUtility.balanceOf,allowance:pageUtility.allowance};