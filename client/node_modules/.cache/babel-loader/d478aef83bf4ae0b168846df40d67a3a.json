{"ast":null,"code":"import _objectSpread from \"/Users/asurashen/Project/dark/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/asurashen/Project/dark/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/asurashen/Project/dark/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/asurashen/Project/dark/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/asurashen/Project/dark/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/asurashen/Project/dark/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/asurashen/Project/dark/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/asurashen/Project/dark/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/asurashen/Project/dark/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/asurashen/Project/dark/client/src/App.js\";\nimport React, { Component, createElement, useState } from \"react\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\nimport DarkContract from \"./contracts/Dark.json\";\nimport styles from './styles/main.module.css';\nimport 'antd/dist/antd.min.css';\nimport { SmileTwoTone } from '@ant-design/icons';\nimport { Layout, Space, Typography, Card, Col, Row, Input, Button, Divider, Tabs, Image } from \"antd\"; //coments\n\nimport { Comment, Tooltip, Avatar } from 'antd';\nimport moment from 'moment';\nimport { UserOutlined, DislikeOutlined, LikeOutlined, DislikeFilled, LikeFilled } from '@ant-design/icons';\nimport { HomeOutlined, SettingFilled, SmileOutlined } from '@ant-design/icons';\nvar Title = Typography.Title;\nvar Header = Layout.Header,\n    Content = Layout.Content,\n    Footer = Layout.Footer;\nvar TabPane = Tabs.TabPane;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nvar actions = [/*#__PURE__*/React.createElement(Tooltip, {\n  key: \"comment-basic-like\",\n  title: \"Like\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(LikeOutlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }\n}))), /*#__PURE__*/React.createElement(Tooltip, {\n  key: \"comment-basic-dislike\",\n  title: \"Dislike\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(DislikeOutlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }\n}))), /*#__PURE__*/React.createElement(\"span\", {\n  key: \"comment-basic-reply-to\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }\n}, \"Reply to\")];\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      allposts: {},\n      web3: null,\n      accounts: null,\n      contract: null,\n      newpost: '',\n      numOfPost: 0,\n      addComments: {},\n      newComments: {}\n    };\n\n    _this.handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var _this$state, contract, newpost, accounts, allposts;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _this$state = _this.state, contract = _this$state.contract, newpost = _this$state.newpost, accounts = _this$state.accounts, allposts = _this$state.allposts;\n\n                if (!(newpost != '')) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 5;\n                return contract.methods.createNewPost(newpost).send({\n                  from: accounts[0]\n                });\n\n              case 5:\n                _this.setState({\n                  newpost: ''\n                });\n\n                _this.updatePost();\n\n                _context.next = 10;\n                break;\n\n              case 9:\n                alert('The post cannot be blank!');\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var web3, accounts, networkId, deployedNetwork, instance, addComments, i;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return getWeb3();\n\n            case 3:\n              web3 = _context2.sent;\n              _context2.next = 6;\n              return web3.eth.getAccounts();\n\n            case 6:\n              accounts = _context2.sent;\n              _context2.next = 9;\n              return web3.eth.net.getId();\n\n            case 9:\n              networkId = _context2.sent;\n              deployedNetwork = DarkContract.networks[networkId];\n              instance = new web3.eth.Contract(DarkContract.abi, deployedNetwork && deployedNetwork.address);\n              instance.options.address = \"0xE0bd0D06aB44059Bea8a058c251F63160faf2110\"; // Fill the contract address\n              // Set web3, accounts, and contract to the state, and then proceed with an\n              // example of interacting with the contract's methods.\n\n              _this.setState({\n                web3: web3,\n                accounts: accounts,\n                contract: instance\n              }, _this.updatePost);\n\n              addComments = _this.state.addComments;\n\n              for (i = _this.state.numOfPost - 1; i > -1; i--) {\n                addComments[i] = false;\n              }\n\n              _this.setState({\n                addComments: addComments\n              });\n\n              _context2.next = 23;\n              break;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](0);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.error(_context2.t0);\n\n            case 23:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 19]]);\n    }));\n\n    _this.handleAccountId = function (account) {\n      var tmp = String(account);\n      return tmp.substring(0, 6) + \"...\" + tmp.substring(tmp.length - 4);\n    };\n\n    _this.handleTimestamp = function (timestamp) {\n      var date = new Date(timestamp * 1000);\n      var month = ('0' + (date.getMonth() + 1)).substr(-2);\n      var day = ('0' + date.getDate()).substr(-2);\n      var hour = ('0' + date.getHours()).substr(-2);\n      var minute = ('0' + date.getMinutes()).substr(-2);\n      var second = ('0' + date.getSeconds()).substr(-2);\n      return month + \"/\" + day + \"/\" + date.getFullYear() + \"  \" + hour + \":\" + minute + ':' + second;\n    };\n\n    _this.updatePost = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var contract, numPosts, allPosts, tmppost, i;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              contract = _this.state.contract;\n              _context3.next = 3;\n              return contract.methods.numOfPosts().call();\n\n            case 3:\n              numPosts = _context3.sent;\n\n              _this.setState({\n                numOfPost: numPosts\n              });\n\n              allPosts = {};\n              tmppost = {};\n              i = numPosts - 1;\n\n            case 8:\n              if (!(i > -1)) {\n                _context3.next = 20;\n                break;\n              }\n\n              _context3.next = 11;\n              return contract.methods.getPost(i).call();\n\n            case 11:\n              tmppost = _context3.sent;\n              tmppost = _objectSpread({}, tmppost);\n              _context3.next = 15;\n              return _this.getAllCommentsByPost(tmppost.postID);\n\n            case 15:\n              tmppost.comments = _context3.sent;\n              allPosts[tmppost.postID] = tmppost;\n\n            case 17:\n              i--;\n              _context3.next = 8;\n              break;\n\n            case 20:\n              _this.setState({\n                allposts: allPosts\n              });\n\n            case 21:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    _this.getAllCommentsByPost = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(postID) {\n        var contract, header, comments, curr_comment;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                contract = _this.state.contract;\n                _context4.next = 3;\n                return contract.methods.post2Comment(postID).call();\n\n              case 3:\n                header = _context4.sent;\n                comments = [];\n                curr_comment = 0;\n\n              case 6:\n                if (!(header != 0)) {\n                  _context4.next = 14;\n                  break;\n                }\n\n                _context4.next = 9;\n                return contract.methods.ptr2Comment(header).call();\n\n              case 9:\n                curr_comment = _context4.sent;\n                comments.push(curr_comment);\n                header = curr_comment.next;\n                _context4.next = 6;\n                break;\n\n              case 14:\n                return _context4.abrupt(\"return\", comments);\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.handleSubmitComment = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(event, postID) {\n        var _this$state2, contract, accounts, newComments, addComments;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                event.preventDefault();\n                console.log(postID);\n                _this$state2 = _this.state, contract = _this$state2.contract, accounts = _this$state2.accounts, newComments = _this$state2.newComments, addComments = _this$state2.addComments;\n\n                if (!(newComments[postID] != '')) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                _context5.next = 6;\n                return contract.methods.createNewComment(postID, newComments[postID]).send({\n                  from: accounts[0]\n                });\n\n              case 6:\n                _this.updatePost();\n\n                addComments[postID] = false;\n                newComments[postID] = '';\n\n                _this.setState({\n                  addComments: addComments,\n                  newComments: newComments\n                });\n\n                _context5.next = 13;\n                break;\n\n              case 12:\n                alert('The comment cannot be blank!');\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChangeComment = function (event, postID) {\n      var newComments = _this.state.newComments;\n      newComments[postID] = event.target.value;\n\n      _this.setState({\n        newComments: newComments\n      });\n    };\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAccountId = _this.handleAccountId.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTimestamp = _this.handleTimestamp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getAllCommentsByPost = _this.getAllCommentsByPost.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        newpost: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    // render() {\n    //   if (!this.state.web3) {\n    //     return <div>Loading Web3, accounts, and contract...</div>;\n    //   }\n    //   return (\n    //     <>\n    //       <Router>\n    //         <Routes>\n    //           <Route exact path='/' element={<MainPage />} />\n    //           <Route exact path='/posts/new' element={<NewPostPage />} />\n    //           <Route exact path='/posts/:postid' element={<PostDetailPage />} />\n    //           <Route exact path='/posts' element={<PostPage />} />\n    //         </Routes>\n    //       </Router>\n    //     </>\n    //   );\n    // }\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.web3) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 14\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 9\n          }\n        }, \"Loading Web3, accounts, and contract...\"));\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        style: {\n          position: 'fixed',\n          zIndex: 1,\n          width: '100%',\n          backgroundColor: '#4682b4'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Space, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SmileTwoTone, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.header1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Title, {\n        italic: true,\n        strong: true,\n        level: 1,\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: 'White'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }\n      }, \" DARK\")))), /*#__PURE__*/React.createElement(Content, {\n        className: styles.container,\n        style: {\n          marginTop: 64\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"site-card-wrapper\",\n        style: {\n          marginTop: 64\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: \"Decentrolized\",\n        bordered: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }, \"Card content\")), /*#__PURE__*/React.createElement(Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: \"Ale wallet\",\n        bordered: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, \"Card content\")), /*#__PURE__*/React.createElement(Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: \"Ethereum\",\n        bordered: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      }, \"Card content\")))), /*#__PURE__*/React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        onChange: callback,\n        style: {\n          marginTop: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        tab: \"Home\",\n        key: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: styles.formDiv,\n        style: {\n          marginTop: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        size: 50,\n        style: {\n          backgroundColor: '#87d068'\n        },\n        icon: /*#__PURE__*/React.createElement(UserOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 21\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }\n      }, \"      User: \"), this.handleAccountId(this.state.accounts[0])), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.inputDivSecondLine,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        placeholder: \"Whats happening?\",\n        type: \"text\",\n        onChange: this.handleChange,\n        className: styles.inputDiv,\n        value: this.state.newpost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Space, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(HomeOutlined, {\n        size: 50,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SettingFilled, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SmileOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SmileOutlined, {\n        rotate: 180,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 12\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: styles.submitButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }\n      }, \"POST\")))), /*#__PURE__*/React.createElement(TabPane, {\n        tab: \"Popular\",\n        key: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }\n      }, \"Loading ......\"), /*#__PURE__*/React.createElement(TabPane, {\n        tab: \"Following\",\n        key: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }\n      }, \"You didn't follow anyone\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.allpostContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }\n      }, Object.keys(this.state.allposts).sort(function (a, b) {\n        return b - a;\n      }).map(function (key, index) {\n        var post = _this2.state.allposts[key];\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Comment, {\n          actions: actions,\n          author: _this2.handleAccountId(post.userID),\n          avatar: /*#__PURE__*/React.createElement(Avatar, {\n            src: \"https://joeschmoe.io/api/v1/random\",\n            alt: _this2.handleAccountId(post.userID),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 27\n            }\n          }),\n          content: post.text,\n          datetime: _this2.handleTimestamp(post.timestamp),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 19\n          }\n        }));\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/asurashen/Project/dark/client/src/App.js"],"names":["React","Component","createElement","useState","getWeb3","DarkContract","styles","SmileTwoTone","Layout","Space","Typography","Card","Col","Row","Input","Button","Divider","Tabs","Image","Comment","Tooltip","Avatar","moment","UserOutlined","DislikeOutlined","LikeOutlined","DislikeFilled","LikeFilled","HomeOutlined","SettingFilled","SmileOutlined","Title","Header","Content","Footer","TabPane","callback","key","console","log","actions","App","props","state","allposts","web3","accounts","contract","newpost","numOfPost","addComments","newComments","handleSubmit","event","preventDefault","methods","createNewPost","send","from","setState","updatePost","alert","componentDidMount","eth","getAccounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","options","i","error","handleAccountId","account","tmp","String","substring","length","handleTimestamp","timestamp","date","Date","month","getMonth","substr","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","getFullYear","numOfPosts","call","numPosts","allPosts","tmppost","getPost","getAllCommentsByPost","postID","comments","post2Comment","header","curr_comment","ptr2Comment","push","next","handleSubmitComment","createNewComment","handleChangeComment","target","value","handleChange","bind","container","position","zIndex","width","backgroundColor","header1","color","marginTop","formDiv","userId","inputDivSecondLine","inputDiv","submitButton","allpostContainer","Object","keys","sort","a","b","map","index","post","userID","text"],"mappings":"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","sourcesContent":["import React, { Component, createElement, useState } from \"react\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\nimport DarkContract from \"./contracts/Dark.json\";\nimport styles from './styles/main.module.css'\nimport 'antd/dist/antd.min.css';\nimport {SmileTwoTone} from '@ant-design/icons';\nimport {Layout, Space, Typography, Card, Col, Row, Input, Button, Divider, Tabs, Image} from \"antd\";\n\n\n\n//coments\nimport { Comment, Tooltip, Avatar } from 'antd';\nimport moment from 'moment';\nimport { UserOutlined,DislikeOutlined, LikeOutlined, DislikeFilled, LikeFilled } from '@ant-design/icons';\nimport { HomeOutlined, SettingFilled, SmileOutlined} from '@ant-design/icons';\n\n\nconst { Title } = Typography;\nconst { Header, Content, Footer } = Layout;\n\n\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nconst actions = [\n  <Tooltip key=\"comment-basic-like\" title=\"Like\">\n    <span >\n      <LikeOutlined />\n    </span>\n  </Tooltip>,\n  <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n    <span>\n      <DislikeOutlined />\n    </span>\n  </Tooltip>,\n  <span key=\"comment-basic-reply-to\">Reply to</span>,\n]; \n\n\n\nclass App extends Component {\n  state = { allposts: {}, web3: null, accounts: null, contract: null, newpost: '', numOfPost: 0, addComments: {}, newComments: {} };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleAccountId = this.handleAccountId.bind(this);\n    this.handleTimestamp = this.handleTimestamp.bind(this);\n    this.getAllCommentsByPost = this.getAllCommentsByPost.bind(this);\n  }\n\n\n\n\n\n\n  handleChange(event) {\n    this.setState({ newpost: event.target.value })\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const { contract, newpost, accounts, allposts } = this.state;\n    if (newpost != '') {\n      await contract.methods.createNewPost(newpost).send({ from: accounts[0] });\n      this.setState({ newpost: '' });\n      this.updatePost();\n    } else {\n      alert('The post cannot be blank!');\n    }\n  }\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = DarkContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        DarkContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n      instance.options.address = \"0xE0bd0D06aB44059Bea8a058c251F63160faf2110\";// Fill the contract address\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance }, this.updatePost);\n\n      const { addComments } = this.state;\n\n      for (let i = this.state.numOfPost - 1; i > -1; i--) {\n        addComments[i] = false;\n      }\n      this.setState({ addComments: addComments })\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  handleAccountId = (account) => {\n    let tmp = String(account);\n    return tmp.substring(0, 6) + \"...\" + tmp.substring(tmp.length - 4)\n  }\n\n  handleTimestamp = (timestamp) => {\n    let date = new Date(timestamp * 1000);\n    let month = ('0' + (date.getMonth() + 1)).substr(- 2)\n    let day = ('0' + date.getDate()).substr(-2)\n    let hour = ('0' + date.getHours()).substr(-2)\n    let minute = ('0' + date.getMinutes()).substr(-2)\n    let second = ('0' + date.getSeconds()).substr(-2)\n    return month +\n      \"/\" + day +\n      \"/\" + date.getFullYear() +\n      \"  \" + hour +\n      \":\" + minute + ':' + second\n  }\n\n  updatePost = async () => {\n    const { contract } = this.state;\n    const numPosts = await contract.methods.numOfPosts().call();\n    this.setState({ numOfPost: numPosts })\n    let allPosts = {};\n    let tmppost = {};\n    for (let i = numPosts - 1; i > -1; i--) {\n      tmppost = await contract.methods.getPost(i).call();\n      tmppost = { ...tmppost };\n      tmppost.comments = await this.getAllCommentsByPost(tmppost.postID);\n      allPosts[tmppost.postID] = tmppost;\n    }\n    this.setState({ allposts: allPosts });\n  };\n\n  getAllCommentsByPost = async (postID) => {\n    const { contract } = this.state;\n    let header = await contract.methods.post2Comment(postID).call();\n    let comments = [];\n    let curr_comment = 0;\n    while (header != 0) {\n      curr_comment = await contract.methods.ptr2Comment(header).call();\n      comments.push(curr_comment);\n      header = curr_comment.next;\n    }\n    return comments;\n  }\n  handleSubmitComment = async (event, postID) => {\n    event.preventDefault();\n    console.log(postID);\n    const { contract, accounts, newComments, addComments } = this.state;\n    if (newComments[postID] != '') {\n      await contract.methods.createNewComment(postID, newComments[postID]).send({ from: accounts[0] });\n      this.updatePost();\n      addComments[postID] = false;\n      newComments[postID] = '';\n      this.setState({ addComments: addComments, newComments: newComments })\n    } else {\n      alert('The comment cannot be blank!');\n    }\n  }\n\n  handleChangeComment = (event, postID) => {\n    const { newComments } = this.state;\n    newComments[postID] = event.target.value;\n    this.setState({ newComments: newComments })\n  };\n\n\n  \n \n\n  // render() {\n  //   if (!this.state.web3) {\n  //     return <div>Loading Web3, accounts, and contract...</div>;\n  //   }\n  //   return (\n  //     <>\n  //       <Router>\n  //         <Routes>\n  //           <Route exact path='/' element={<MainPage />} />\n  //           <Route exact path='/posts/new' element={<NewPostPage />} />\n  //           <Route exact path='/posts/:postid' element={<PostDetailPage />} />\n  //           <Route exact path='/posts' element={<PostPage />} />\n  //         </Routes>\n  //       </Router>\n  //     </>\n  //   );\n  // }\n  render() {\n    if (!this.state.web3) {\n      return <div className={styles.container}>\n        <div>Loading Web3, accounts, and contract...</div>\n      </div >\n    }\n    return (\n      <>\n \n          <Layout>\n            <Header style={{\n            position: 'fixed',\n            zIndex: 1,\n            width: '100%',\n            backgroundColor: '#4682b4'\n            \n          }} >\n            <Space>\n            <SmileTwoTone />\n            </Space>\n            <div className = {styles.header1}>\n              <Title italic strong level={1} color=\"white\">\n                <p style={{color:'White'}} > DARK</p>\n             </Title>\n          </div>\n\n          </Header>\n\n          <Content className = {styles.container} style = {{marginTop: 64}}>\n\n\n\n          <div className=\"site-card-wrapper\" style = {{marginTop: 64}}>\n            <Row gutter={16}>\n              <Col span={8}>\n                <Card title=\"Decentrolized\" bordered={false}>\n                  Card content\n                </Card>\n              </Col>\n              <Col span={8}>\n                <Card title=\"Ale wallet\" bordered={false}>\n                  Card content\n                </Card>\n              </Col>\n              <Col span={8}>\n                <Card title=\"Ethereum\" bordered={false}>\n                  Card content\n                </Card>\n              </Col>\n            </Row>\n          </div>\n\n        \n          <Tabs defaultActiveKey=\"1\" onChange={callback} style = {{marginTop: 100}}>\n            <TabPane tab=\"Home\" key=\"1\">\n              \n\n            <form onSubmit={this.handleSubmit} className={styles.formDiv} style = {{marginTop: 40}}>\n            <div className={styles.userId}>\n            <Avatar size = {50}\n              style={{\n               backgroundColor: '#87d068',\n               }}\n              icon={<UserOutlined />}/>\n              <span style={{ color: 'grey' }}>      User: </span>{this.handleAccountId(this.state.accounts[0])}\n            </div>\n            <div className={styles.inputDivSecondLine}>\n              <textarea placeholder='Whats happening?' type='text' onChange={this.handleChange} className={styles.inputDiv} value={this.state.newpost}>\n              </textarea>\n            </div>\n           \n\n            <Space>\n              <HomeOutlined size={50}/>\n              <SettingFilled />\n              <SmileOutlined />\n              <SmileOutlined rotate={180} />\n\n             </ Space> \n           <Divider />\n           <div>\n              <button className = {styles.submitButton}>POST</button>\n           </div>\n          </form>\n\n\n\n            </TabPane>\n            <TabPane tab=\"Popular\" key=\"2\">\n              Loading ......\n            </TabPane>\n            <TabPane tab=\"Following\" key=\"3\">\n              You didn't follow anyone\n            </TabPane>\n          </Tabs>\n\n\n          <div className={styles.allpostContainer}>\n            {Object.keys(this.state.allposts).sort((a, b) => (b - a)).map((key, index) => {\n              const post = this.state.allposts[key];\n              return(\n\n                <div>\n\n                  <Comment\n                  actions = {actions}\n                  author = {this.handleAccountId(post.userID)}\n                  avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt={this.handleAccountId(post.userID)} />}\n                  content = {post.text}\n                  datetime = {this.handleTimestamp(post.timestamp)}\n                  >\n                  </Comment>\n\n\n\n                </div>\n\n\n\n              )\n\n\n\n\n\n              \n            })}\n          </div>\n          </Content>\n          </Layout>\n         \n      </>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}