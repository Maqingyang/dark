{"ast":null,"code":"import _regeneratorRuntime from \"/Users/asurashen/Project/ale_try/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/asurashen/Project/ale_try/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/asurashen/Project/ale_try/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/asurashen/Project/ale_try/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { useEffect, useState } from 'react';\nimport \"./App.css\";\nimport DarkContract from \"./contracts/Dark.json\";\nimport styles from './styles/main.module.css'; //new\n\nimport Mcp from 'mcp.js';\nimport contract from './contract.js';\n\nfunction App() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      mcp = _useState2[0],\n      setMcp = _useState2[1];\n\n  var networks = {\n    \"3\": \"http://13.212.177.203:8765\",\n    \"4\": \"http://18.182.45.18:8765\"\n  };\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentAccount = _useState4[0],\n      setCurrentAccount = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tokens = _useState6[0],\n      setTokens = _useState6[1];\n\n  var on_networkId_change = function on_networkId_change(networkId) {\n    var tmp = new Mcp();\n    tmp.Contract.setProvider(networks[networkId]);\n    setMcp(tmp);\n    return tmp;\n  };\n\n  var initializeWallet = function initializeWallet(provider) {\n    provider.on(\"on_networkId_change\", on_networkId_change);\n    var mcp = on_networkId_change(provider.networkId);\n    console.log(\"Found account address: \", provider.account);\n    setCurrentAccount(provider.account);\n    fetchTokens(mcp);\n  };\n\n  var checkWalletIsConnected = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _window, aleereum;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _window = window, aleereum = _window.aleereum;\n\n              if (!(!aleereum || !aleereum.isConnected)) {\n                _context.next = 6;\n                break;\n              }\n\n              console.log(\"Make sure you have ALE WALLET installed!\");\n              return _context.abrupt(\"return\");\n\n            case 6:\n              console.log(\"Wallet exists! We're ready to go!\");\n\n            case 7:\n              initializeWallet(aleereum);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function checkWalletIsConnected() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var connectWalletHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _window2, aleereum;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _window2 = window, aleereum = _window2.aleereum;\n\n              if (!aleereum) {\n                alert(\"Please install ALE WALLET!\");\n              }\n\n              try {\n                aleereum.connect();\n                initializeWallet(aleereum);\n              } catch (err) {\n                console.log(err);\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function connectWalletHandler() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var connectWalletButton = function connectWalletButton() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: connectWalletHandler,\n      className: \"cta-button connect-wallet-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, \"Connect Wallet\");\n  };\n\n  var fetchTokens = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(provider) {\n      var abi, address, Contract;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              provider = mcp ? mcp : provider;\n\n              if (provider) {\n                _context3.next = 4;\n                break;\n              }\n\n              throw \"no provider\";\n\n            case 4:\n              abi = require(\"./abi.json\");\n              address = \"0x1D8b22d407c2b4C0bEdDc4D818AF32948BC3a6B9\";\n              Contract = new provider.Contract(abi, address);\n              console.log(Contract);\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error(_context3.t0);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 10]]);\n    }));\n\n    return function fetchTokens(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchTokens();\n    checkWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 8\n    }\n  }, \" hello\"), currentAccount ? connectWalletButton() : connectWalletButton());\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/asurashen/Project/ale_try/client/src/App.js"],"names":["React","Component","useEffect","useState","DarkContract","styles","Mcp","contract","App","mcp","setMcp","networks","currentAccount","setCurrentAccount","tokens","setTokens","on_networkId_change","networkId","tmp","Contract","setProvider","initializeWallet","provider","on","console","log","account","fetchTokens","checkWalletIsConnected","window","aleereum","isConnected","connectWalletHandler","alert","connect","err","connectWalletButton","abi","require","address","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { useEffect, useState } from 'react';\nimport \"./App.css\";\nimport DarkContract from \"./contracts/Dark.json\";\nimport styles from './styles/main.module.css'\n\n//new\nimport Mcp from 'mcp.js';\nimport contract from './contract.js';\n\n\n\nfunction App() {\n  const [ mcp, setMcp ] = useState(null);\n  const networks = {\n    \"3\" : \"http://13.212.177.203:8765\",\n    \"4\" : \"http://18.182.45.18:8765\"\n  };\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [tokens, setTokens] = useState([]);\n\n  const on_networkId_change = (networkId) => {\n    const tmp = new Mcp();\n    tmp.Contract.setProvider(networks[networkId]);\n    setMcp(tmp);\n    return tmp\n  }\n\n  const initializeWallet = (provider) => {\n    provider.on(\"on_networkId_change\", on_networkId_change);\n\n    const mcp = on_networkId_change(provider.networkId);\n\n    console.log(\"Found account address: \", provider.account);\n\n    setCurrentAccount(provider.account);\n\n    fetchTokens(mcp);\n  }\n\n  const checkWalletIsConnected = async () => {\n    const { aleereum } = window;\n\n    if (!aleereum || !aleereum.isConnected) {\n      console.log(\"Make sure you have ALE WALLET installed!\");\n      return;\n    } else {\n      console.log(\"Wallet exists! We're ready to go!\")\n    }\n\n    initializeWallet(aleereum);\n  }\n\n  const connectWalletHandler = async () => {\n    const { aleereum } = window;\n\n    if (!aleereum) {\n      alert(\"Please install ALE WALLET!\");\n    }\n\n    try {\n      aleereum.connect();\n\n      initializeWallet(aleereum);\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const connectWalletButton = () => {\n    return (\n      <button onClick={connectWalletHandler} className='cta-button connect-wallet-button'>\n        Connect Wallet\n      </button>\n    )\n  }\n  const fetchTokens = async (provider) => {\n    try {\n      provider = mcp ? mcp : provider;\n      if (!provider) throw \"no provider\";\n      const abi = require(\"./abi.json\");\n      const address = \"0x1D8b22d407c2b4C0bEdDc4D818AF32948BC3a6B9\";\n      const Contract = new provider.Contract(abi, address);\n    \n\n      console.log(Contract);\n\n     \n\n\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  useEffect(() => {\n    fetchTokens();\n\n    checkWalletIsConnected();\n  }, [])\n    return (\n     <div>\n       <p> hello</p>\n       {currentAccount? connectWalletButton():connectWalletButton()}\n      </div>\n\n         \n      \n    )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}